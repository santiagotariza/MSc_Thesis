/*
 * Default configuration for the RNA-seq pipeline
 * Modules preferred, Docker/Singularity fallback
 */

params {
    samplesheet   = "samplesheet.csv"
    genome_fasta  = "genome/GRCh38.primary_assembly.genome.fa"
    annotation    = "genome/gencode.v48.primary_assembly.annotation.gtf"
    genome_index  = "genome_index"
    outdir        = "results"
    bam_dir       = "bam_files"
    
    // Default Docker images as fallback
    docker_fastp         = 'quay.io/biocontainers/fastp:0.23.2--h79da9fb_0'
    docker_star          = 'quay.io/biocontainers/star:2.7.9a--h9ee0642_0'
    docker_featureCounts = 'quay.io/biocontainers/subread:2.0.6--he4a0461_2'
    docker_r_env         = 'rocker/r-ver:4.5.1'   
}

process {
    // Default settings for all processes
    executor = 'slurm'
    queue    = 'medium'
    cpus     = 8
    memory   = '8 GB'
    time     = '1h'
    maxForks = 12
}

// Enable Singularity (fallback)
singularity {
    enabled    = true
    autoMounts = true
}

// Function to check if a command exists
def commandExists(cmd) {
    try {
        def proc = ['bash','-c',"command -v $cmd"].execute()
        proc.waitFor()
        return proc.exitValue() == 0
    } catch (all) {
        return false
    }
}

// Process-specific configuration
process {

    // FASTP
    withName: FASTP {
        time = '15m'
        if (commandExists('fastp')) {
            module = 'fastp/0.22.0'
        } else {
            container = params.docker_fastp
            //containerOptions = '-u $(id -u):$(id -g) --rm'
        }
    }

    // STAR indexing
    withName: STAR_INDEX {
        memory = '64 GB'
        time = '2h'
        if (commandExists('STAR')) {
            module = 'star/2.7.9a'
        } else {
            container = params.docker_star
            //containerOptions = '-u $(id -u):$(id -g) --rm'
        }
    }

    // STAR alignment
    withName: STAR_ALIGN {
        memory = '64 GB'
        if (commandExists('STAR')) {
            module = 'star/2.7.9a'
        } else {
            container = params.docker_star
            //containerOptions = '-u $(id -u):$(id -g) --rm'
        }
    }

    // featureCounts
    withName: FEATURECOUNTS {
        memory = '16 GB'
        if (commandExists('featureCounts')) {
            module = 'subread/2.0.5'
        } else {
            container = params.docker_featureCounts
            //containerOptions = '-u $(id -u):$(id -g) --rm'
        }
    }

    // R scripts --(future implementation with renv)--
    // withName: '.*\\.R' {
    //     if (commandExists('R')) {
    //         module = ''  // use system R
    //     } else {
    //         container = params.docker_r_env
    //         containerOptions = '-u $(id -u):$(id -g) --rm'
    //     }
    // }
}

// Timeline, report, trace, DAG
timeline {
    enabled   = true
    file      = "${params.outdir}/pipeline_timeline.html"
    overwrite = true
}

report {
    enabled   = true
    file      = "${params.outdir}/pipeline_report.html"
    overwrite = true
}

trace {
    enabled   = true
    file      = "${params.outdir}/pipeline_trace.txt"
    overwrite = true
}

dag {
    enabled   = true
    file      = "${params.outdir}/pipeline_dag.png"
    overwrite = true
}